version: '3.8'

services:
  # ===== 개발 환경 대시보드 오버라이드 =====
  dashboard:
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
    volumes:
      - ./dashboard:/var/www/html:cached
      - ./shared:/var/shared:cached
    command: >
      sh -c "
        php -S 0.0.0.0:80 -t /var/www/html/public &&
        tail -f /dev/null
      "

  # ===== 개발 환경 언어별 서버 오버라이드 =====
  php-server:
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - XDEBUG_MODE=develop,debug
      - XDEBUG_CONFIG=client_host=host.docker.internal
    volumes:
      - ./servers/php-server:/var/www/html:cached
      - ./shared:/var/shared:cached
    command: >
      sh -c "
        composer install --dev &&
        php -S 0.0.0.0:80 -t /var/www/html/public &&
        tail -f /dev/null
      "

  nodejs-server:
    environment:
      - NODE_ENV=development
      - DEBUG=*
    volumes:
      - ./servers/nodejs-server:/app:cached
      - /app/node_modules
      - ./shared:/var/shared:cached
    command: >
      sh -c "
        npm install &&
        npm run dev
      "

  python-server:
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./servers/python-server:/app:cached
      - ./shared:/var/shared:cached
    command: >
      sh -c "
        pip install -r requirements-dev.txt &&
        flask run --host=0.0.0.0 --port=5000 --reload
      "

  java-server:
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    ports:
      - "8081:8080"
      - "5005:5005"  # 디버깅 포트
    volumes:
      - ./servers/java-server:/app:cached
      - ./shared:/var/shared:cached
    command: >
      sh -c "
        ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments='-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'
      "

  go-server:
    environment:
      - GIN_MODE=debug
      - CGO_ENABLED=0
    volumes:
      - ./servers/go-server:/app:cached
      - ./shared:/var/shared:cached
    command: >
      sh -c "
        go mod download &&
        go install github.com/cosmtrek/air@latest &&
        air -c .air.toml
      "

  # ===== 개발 도구들 =====
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5
    container_name: websec-phpmyadmin
    ports:
      - "8090:80"
    environment:
      - PMA_HOST=mysql
      - PMA_USER=websec
      - PMA_PASSWORD=websec123
      - MYSQL_ROOT_PASSWORD=rootpass123
    depends_on:
      - mysql
    networks:
      - websec-network

  adminer:
    image: adminer:4
    container_name: websec-adminer
    ports:
      - "8091:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - websec-network

  mongo-express:
    image: mongo-express:1.0.0
    container_name: websec-mongo-express
    ports:
      - "8092:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - websec-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: websec-redis-commander
    ports:
      - "8093:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redis123
    depends_on:
      - redis
    networks:
      - websec-network

  # ===== 로그 수집기 =====
  logspout:
    image: gliderlabs/logspout:latest
    container_name: websec-logspout
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: syslog://logs:514
    depends_on:
      - logs
    networks:
      - websec-network

  logs:
    image: alpine:latest
    container_name: websec-logs
    command: >
      sh -c "
        apk add --no-cache rsyslog &&
        rsyslogd -n -f /dev/null
      "
    ports:
      - "514:514/udp"
    networks:
      - websec-network

networks:
  websec-network:
    external: true